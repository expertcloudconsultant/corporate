Terraform used the selected providers to generate the following execution plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # azurerm_linux_virtual_machine.corporate-production-vm01 will be created
  + resource "azurerm_linux_virtual_machine" "corporate-production-vm01" {
      + admin_username                  = "linuxsrvuser"
      + allow_extension_operations      = true
      + computer_name                   = "corporate-production-vm01"
      + custom_data                     = (sensitive value)
      + disable_password_authentication = true
      + extensions_time_budget          = "PT1H30M"
      + id                              = (known after apply)
      + location                        = "eastus2"
      + max_bid_price                   = -1
      + name                            = "corp-production-vm01"
      + network_interface_ids           = (known after apply)
      + patch_mode                      = "ImageDefault"
      + platform_fault_domain           = -1
      + priority                        = "Regular"
      + private_ip_address              = (known after apply)
      + private_ip_addresses            = (known after apply)
      + provision_vm_agent              = true
      + public_ip_address               = (known after apply)
      + public_ip_addresses             = (known after apply)
      + resource_group_name             = "corp-resources-rg"
      + size                            = "Standard_DC1ds_v3"
      + virtual_machine_id              = (known after apply)
      + zone                            = (known after apply)

      + admin_ssh_key {
          + public_key = (known after apply)
          + username   = "linuxsrvuser"
        }

      + os_disk {
          + caching                   = "ReadWrite"
          + disk_size_gb              = (known after apply)
          + name                      = "corpprodvm01disk"
          + storage_account_type      = "Premium_LRS"
          + write_accelerator_enabled = false
        }

      + source_image_reference {
          + offer     = "0001-com-ubuntu-server-focal"
          + publisher = "Canonical"
          + sku       = "20_04-lts-gen2"
          + version   = "latest"
        }
    }

  # azurerm_network_interface.corporate-production-vm01-nic will be created
  + resource "azurerm_network_interface" "corporate-production-vm01-nic" {
      + applied_dns_servers           = (known after apply)
      + dns_servers                   = (known after apply)
      + enable_accelerated_networking = false
      + enable_ip_forwarding          = false
      + id                            = (known after apply)
      + internal_dns_name_label       = (known after apply)
      + internal_domain_name_suffix   = (known after apply)
      + location                      = "eastus2"
      + mac_address                   = (known after apply)
      + name                          = "corporate-production-vm01-nic"
      + private_ip_address            = (known after apply)
      + private_ip_addresses          = (known after apply)
      + resource_group_name           = "corp-resources-rg"
      + virtual_machine_id            = (known after apply)

      + ip_configuration {
          + gateway_load_balancer_frontend_ip_configuration_id = (known after apply)
          + name                                               = "corporate-production-vm01-nic-ip"
          + primary                                            = (known after apply)
          + private_ip_address                                 = (known after apply)
          + private_ip_address_allocation                      = "Dynamic"
          + private_ip_address_version                         = "IPv4"
          + public_ip_address_id                               = (known after apply)
          + subnet_id                                          = (known after apply)
        }
    }

  # azurerm_network_interface_security_group_association.corporate-production-vm-01-nsg-link will be created
  + resource "azurerm_network_interface_security_group_association" "corporate-production-vm-01-nsg-link" {
      + id                        = (known after apply)
      + network_interface_id      = (known after apply)
      + network_security_group_id = (known after apply)
    }

  # azurerm_network_security_group.corporate-production-nsg will be created
  + resource "azurerm_network_security_group" "corporate-production-nsg" {
      + id                  = (known after apply)
      + location            = "eastus2"
      + name                = "corporate-production-nsg"
      + resource_group_name = "corp-resources-rg"
      + security_rule       = [
          + {
              + access                                     = "Allow"
              + description                                = ""
              + destination_address_prefix                 = "*"
              + destination_address_prefixes               = []
              + destination_application_security_group_ids = []
              + destination_port_range                     = "22"
              + destination_port_ranges                    = []
              + direction                                  = "Inbound"
              + name                                       = "SSH"
              + priority                                   = 1001
              + protocol                                   = "Tcp"
              + source_address_prefix                      = "*"
              + source_address_prefixes                    = []
              + source_application_security_group_ids      = []
              + source_port_range                          = "*"
              + source_port_ranges                         = []
            },
        ]
    }

  # azurerm_public_ip.corp-vngw-pip will be created
  + resource "azurerm_public_ip" "corp-vngw-pip" {
      + allocation_method       = "Dynamic"
      + availability_zone       = (known after apply)
      + fqdn                    = (known after apply)
      + id                      = (known after apply)
      + idle_timeout_in_minutes = 4
      + ip_address              = (known after apply)
      + ip_version              = "IPv4"
      + location                = "eastus2"
      + name                    = "corp-vngw-pip"
      + resource_group_name     = "corp-resources-rg"
      + sku                     = "Basic"
      + sku_tier                = "Regional"
      + zones                   = (known after apply)
    }

  # azurerm_public_ip.corporate-production-vm01-pubip will be created
  + resource "azurerm_public_ip" "corporate-production-vm01-pubip" {
      + allocation_method       = "Dynamic"
      + availability_zone       = (known after apply)
      + fqdn                    = (known after apply)
      + id                      = (known after apply)
      + idle_timeout_in_minutes = 4
      + ip_address              = (known after apply)
      + ip_version              = "IPv4"
      + location                = "eastus2"
      + name                    = "corporate-production-vm01-pubip"
      + resource_group_name     = "corp-resources-rg"
      + sku                     = "Basic"
      + sku_tier                = "Regional"
      + zones                   = (known after apply)
    }

  # azurerm_resource_group.corp-resources-rg will be created
  + resource "azurerm_resource_group" "corp-resources-rg" {
      + id       = (known after apply)
      + location = "eastus2"
      + name     = "corp-resources-rg"
    }

  # azurerm_subnet.corp-production-subnet will be created
  + resource "azurerm_subnet" "corp-production-subnet" {
      + address_prefix                                 = (known after apply)
      + address_prefixes                               = [
          + "10.10.10.0/24",
        ]
      + enforce_private_link_endpoint_network_policies = false
      + enforce_private_link_service_network_policies  = false
      + id                                             = (known after apply)
      + name                                           = "corp-production-subnet"
      + resource_group_name                            = "corp-resources-rg"
      + virtual_network_name                           = "corp-production-vnet"
    }

  # azurerm_subnet.hub-gateway-subnet will be created
  + resource "azurerm_subnet" "hub-gateway-subnet" {
      + address_prefix                                 = (known after apply)
      + address_prefixes                               = [
          + "172.20.0.0/24",
        ]
      + enforce_private_link_endpoint_network_policies = false
      + enforce_private_link_service_network_policies  = false
      + id                                             = (known after apply)
      + name                                           = "GatewaySubnet"
      + resource_group_name                            = "corp-resources-rg"
      + virtual_network_name                           = "corp-hub-vnet"
    }

  # azurerm_subnet.hub-management-subnet will be created
  + resource "azurerm_subnet" "hub-management-subnet" {
      + address_prefix                                 = (known after apply)
      + address_prefixes                               = [
          + "172.20.1.0/24",
        ]
      + enforce_private_link_endpoint_network_policies = false
      + enforce_private_link_service_network_policies  = false
      + id                                             = (known after apply)
      + name                                           = "corp-management-subnet"
      + resource_group_name                            = "corp-resources-rg"
      + virtual_network_name                           = "corp-hub-vnet"
    }

  # azurerm_virtual_network.corp-hub-vnet will be created
  + resource "azurerm_virtual_network" "corp-hub-vnet" {
      + address_space         = [
          + "172.20.0.0/16",
        ]
      + dns_servers           = (known after apply)
      + guid                  = (known after apply)
      + id                    = (known after apply)
      + location              = "eastus2"
      + name                  = "corp-hub-vnet"
      + resource_group_name   = "corp-resources-rg"
      + subnet                = (known after apply)
      + tags                  = {
          + "environment" = "Hub"
        }
      + vm_protection_enabled = false
    }

  # azurerm_virtual_network.corp-production-vnet will be created
  + resource "azurerm_virtual_network" "corp-production-vnet" {
      + address_space         = [
          + "10.10.0.0/16",
        ]
      + dns_servers           = (known after apply)
      + guid                  = (known after apply)
      + id                    = (known after apply)
      + location              = "eastus2"
      + name                  = "corp-production-vnet"
      + resource_group_name   = "corp-resources-rg"
      + subnet                = (known after apply)
      + tags                  = {
          + "environment" = "Production."
        }
      + vm_protection_enabled = false
    }

  # azurerm_virtual_network_gateway.hub-virtual-network-gateway will be created
  + resource "azurerm_virtual_network_gateway" "hub-virtual-network-gateway" {
      + active_active       = false
      + enable_bgp          = false
      + generation          = (known after apply)
      + id                  = (known after apply)
      + location            = "eastus2"
      + name                = "hub-virtual-network-gateway"
      + resource_group_name = "corp-resources-rg"
      + sku                 = "Basic"
      + type                = "Vpn"
      + vpn_type            = "RouteBased"

      + bgp_settings {
          + asn             = (known after apply)
          + peer_weight     = (known after apply)
          + peering_address = (known after apply)

          + peering_addresses {
              + apipa_addresses       = (known after apply)
              + default_addresses     = (known after apply)
              + ip_configuration_name = (known after apply)
              + tunnel_ip_addresses   = (known after apply)
            }
        }

      + ip_configuration {
          + name                          = "vnetGatewayConfig"
          + private_ip_address_allocation = "Dynamic"
          + public_ip_address_id          = (known after apply)
          + subnet_id                     = (known after apply)
        }
    }

  # azurerm_virtual_network_peering.hub-to-prod-spoke-peering will be created
  + resource "azurerm_virtual_network_peering" "hub-to-prod-spoke-peering" {
      + allow_forwarded_traffic      = (known after apply)
      + allow_gateway_transit        = (known after apply)
      + allow_virtual_network_access = true
      + id                           = (known after apply)
      + name                         = "hub-to-prod-spoke-peering"
      + remote_virtual_network_id    = (known after apply)
      + resource_group_name          = "corp-resources-rg"
      + use_remote_gateways          = (known after apply)
      + virtual_network_name         = "corp-hub-vnet"
    }

  # azurerm_virtual_network_peering.prod-spoke-to-hub-peering will be created
  + resource "azurerm_virtual_network_peering" "prod-spoke-to-hub-peering" {
      + allow_forwarded_traffic      = (known after apply)
      + allow_gateway_transit        = (known after apply)
      + allow_virtual_network_access = true
      + id                           = (known after apply)
      + name                         = "prod-spoke-to-hub-peering"
      + remote_virtual_network_id    = (known after apply)
      + resource_group_name          = "corp-resources-rg"
      + use_remote_gateways          = (known after apply)
      + virtual_network_name         = "corp-production-vnet"
    }

  # tls_private_key.linuxvmsshkey will be created
  + resource "tls_private_key" "linuxvmsshkey" {
      + algorithm                     = "RSA"
      + ecdsa_curve                   = "P224"
      + id                            = (known after apply)
      + private_key_openssh           = (sensitive value)
      + private_key_pem               = (sensitive value)
      + public_key_fingerprint_md5    = (known after apply)
      + public_key_fingerprint_sha256 = (known after apply)
      + public_key_openssh            = (known after apply)
      + public_key_pem                = (known after apply)
      + rsa_bits                      = 4096
    }

Plan: 16 to add, 0 to change, 0 to destroy.